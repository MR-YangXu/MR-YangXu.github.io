import{_ as o,r as p,o as c,c as r,b as s,d as a,e,a as l}from"./app.6d6c724e.js";const i={},u={class:"custom-container tip"},k={href:"https://github.com/kangyana/daily-question/issues/11",target:"_blank",rel:"noopener noreferrer"},d={class:"custom-container tip"},v={href:"https://github.com/kangyana",target:"_blank",rel:"noopener noreferrer"};function b(m,n){const t=p("ExternalLinkIcon");return c(),r("div",null,[n[6]||(n[6]=s("h1",{id:"\u3010q011\u3011js\u4E2Dnew\u5173\u952E\u5B57\u539F\u7406",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u3010q011\u3011js\u4E2Dnew\u5173\u952E\u5B57\u539F\u7406","aria-hidden":"true"},"#"),a(" \u3010Q011\u3011js\u4E2Dnew\u5173\u952E\u5B57\u539F\u7406")],-1)),s("div",u,[n[2]||(n[2]=s("p",{class:"custom-container-title"},"Issue",-1)),s("p",null,[n[1]||(n[1]=a("\u6B22\u8FCE\u5728 Gtihub Issue \u4E2D\u56DE\u7B54\u6B64\u95EE\u9898: ")),s("a",k,[n[0]||(n[0]=a("Issue 11")),e(t)])])]),s("div",d,[n[5]||(n[5]=s("p",{class:"custom-container-title"},"Author",-1)),s("p",null,[n[4]||(n[4]=a("\u56DE\u7B54\u8005: ")),s("a",v,[n[3]||(n[3]=a("kangyana")),e(t)])])]),n[7]||(n[7]=l(`<h2 id="new\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#new\u539F\u7406" aria-hidden="true">#</a> new\u539F\u7406</h2><p><code>new</code> \u64CD\u4F5C\u7B26\u7528\u6765\u521B\u5EFA\u6784\u9020\u51FD\u6570\u7684\u5B9E\u4F8B\uFF0C\u4EE5\u8FD9\u79CD\u65B9\u5F0F\u8C03\u7528\u6784\u9020\u51FD\u6570\u4F1A\u6267\u884C\u5982\u4E0B\u64CD\u4F5C\uFF1A</p><ul><li>\u5728\u5185\u5B58\u4E2D\u521B\u5EFA\u4E00\u4E2A\u65B0\u5BF9\u8C61\uFF1B</li><li>\u8FD9\u4E2A\u5BF9\u8C61\u5185\u90E8\u7684[[Prototype]]\u7279\u6027\u88AB\u590D\u5236\u4E3A\u6784\u9020\u51FD\u6570\u7684prototype\u5C5E\u6027;</li><li>\u6784\u9020\u51FD\u6570\u5185\u90E8\u7684this\u88AB\u590D\u5236\u4E3A\u8FD9\u4E2A\u65B0\u5BF9\u8C61\uFF08\u5373this\u6307\u5411\u65B0\u5BF9\u8C61\uFF09\uFF1B</li><li>\u6267\u884C\u6784\u9020\u51FD\u6570\u5185\u90E8\u7684\u4EE3\u7801\uFF08\u7ED9\u65B0\u5BF9\u8C61\u6DFB\u52A0\u5C5E\u6027\uFF09\uFF1B</li><li>\u5982\u679C\u6784\u9020\u51FD\u6570\u8FD4\u56DE\u975E\u7A7A\u5BF9\u8C61\uFF0C\u5219\u8FD4\u56DE\u8BE5\u5BF9\u8C61\uFF1B\u5426\u5219\uFF0C\u8FD4\u56DE\u521A\u521B\u5EFA\u7684\u65B0\u5B9E\u4F8B\u3002</li></ul><h2 id="\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h2><ol><li>\u4F7F\u7528Object.create\u7EE7\u627Fprototype\u5C5E\u6027</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">myNew</span> <span class="token punctuation">(</span><span class="token parameter">constructor<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> obj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>constructor<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token function">constructor</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">typeof</span> result <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">?</span> result <span class="token operator">:</span> obj<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u91CD\u5199\u65B0\u5BF9\u8C61\u7684__proto__\u5C5E\u6027</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">myNew</span> <span class="token punctuation">(</span><span class="token parameter">constructor<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    obj<span class="token punctuation">.</span>__proto__  <span class="token operator">=</span> constructor<span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
    <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token function">constructor</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">typeof</span> result <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">?</span> result <span class="token operator">:</span> obj<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8))])}const f=o(i,[["render",b],["__file","11.html.vue"]]);export{f as default};
